var search_data = {"index":{"searchIndex":["board","card","player","addtoboard()","attack()","attackwithcard()","createdeck()","drawcard()","new()","new()","new()","playcard()","printboard()","printcard()","resetboard()","startturn()","takedamage()","takedamage()","testoutput()"],"longSearchIndex":["board","card","player","board#addtoboard()","card#attack()","player#attackwithcard()","player#createdeck()","player#drawcard()","board::new()","card::new()","player::new()","player#playcard()","board#printboard()","card#printcard()","board#resetboard()","player#startturn()","card#takedamage()","player#takedamage()","player#testoutput()"],"info":[["Board","","Board.html","",""],["Card","","Card.html","",""],["Player","","Player.html","",""],["addToBoard","Board","Board.html#method-i-addToBoard","(player, card)",""],["attack","Card","Card.html#method-i-attack","(target)",""],["attackWithCard","Player","Player.html#method-i-attackWithCard","(playerCard, opponentCard, board)",""],["createDeck","Player","Player.html#method-i-createDeck","()","<p>Temporary function (probably). Seeds the player&#39;s deck with 30 cards,\nand then shuffles the deck. …\n"],["drawCard","Player","Player.html#method-i-drawCard","()","<p>The player pops a card out of the deck and pushes it into his hand\n"],["new","Board","Board.html#method-c-new","()",""],["new","Card","Card.html#method-c-new","(h, a, c, name)",""],["new","Player","Player.html#method-c-new","(side, brd)",""],["playCard","Player","Player.html#method-i-playCard","(card)","<p>The player adds a card to his side of the board, fails if he does not have\nenough mana.\n"],["printBoard","Board","Board.html#method-i-printBoard","()",""],["printCard","Card","Card.html#method-i-printCard","()",""],["resetBoard","Board","Board.html#method-i-resetBoard","(player)",""],["startTurn","Player","Player.html#method-i-startTurn","()","<p>Turn starts and the player draws a card from the deck, mana is incremented\nby one (so long as his total …\n"],["takeDamage","Card","Card.html#method-i-takeDamage","(dmg)",""],["takeDamage","Player","Player.html#method-i-takeDamage","(damage)","<p>Player takes damage equivalent to the attack value of the attacking card\n"],["testOutput","Player","Player.html#method-i-testOutput","()","<p>Testing function to see the status of th eplayer\n"]]}}